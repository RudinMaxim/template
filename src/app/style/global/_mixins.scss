@use 'sass:map';
@use 'variables';

// ============================
// Миксин breakpoint
// Используется для создания медиазапросов.
@mixin breakpoint($from: null, $to: null) {
  @if $from and not $to {
    @media (min-width: #{map-get($breakpoints, $from)}px) {
      @content;
    }
  } @else if not $from and $to {
    @media (max-width: #{map-get($breakpoints, $to)}px) {
      @content;
    }
  } @else if $from and $to {
    @media (min-width: #{map-get($breakpoints, $from)}px) and (max-width: #{map-get($breakpoints, $to)}px) {
      @content;
    }
  }
}

// Миксин responsive
// Используется для задания значений свойства для разных брейкпоинтов.
@mixin responsiveProperty($property, $values...) {
  $breaks: (xs, md, xl, xxl, fhd, qhd, uhd);

  @for $i from 1 through length($values) {
    $break: nth($breaks, $i);
    $value: nth($values, $i);

    @if $value {
      @include breakpoint($break) {
        #{$property}: $value;
      }
    }
  }
}

// ============================
// Миксин spacing
// Используется для задания значений для отступов.
@mixin spacing($property, $values...) {
  $properties: ('top', 'right', 'bottom', 'left');

  @for $i from 1 through length($values) {
    $value: nth($values, $i);
    @if $value {
      #{$property}-#{nth($properties, $i)}: $value;
    }
  }
}

// ============================
@mixin size($property, $value, $base: 16px) {
  @if unitless($value) {
    #{$property}: rem($value, $base);
  } @else {
    #{$property}: $value;
  }
}

@mixin fluid-size($property, $value, $base-width: 1920px) {
  #{$property}: vw($value, $base-width);
}

@mixin responsive-font-size($min-size, $max-size, $min-screen: 375px, $max-screen: 1920px) {
  font-size: $min-size;

  @media (min-width: #{$min-screen}) {
    font-size: calc(
      #{$min-size} + (#{$max-size} - #{$min-size}) * (100vw - #{$min-screen}) / (#{$max-screen} - #{$min-screen})
    );
  }
}

// ============================
// Миксин для hover с проверкой на поддержку
@mixin hover {
  @media (hover: hover) {
    &:hover {
      @content;
    }
  }
}

// Миксин для Safari
@mixin safari {
  @media not all and (resolution >= 0.001dpcm) {
    @supports (-webkit-appearance: none) {
      @content;
    }
  }
}

// Миксин для текстового сокращения
@mixin text-truncate($linesCount) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $linesCount;
  line-clamp: $linesCount;
  -webkit-box-orient: vertical;
}
